class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(!head || !head->next){
            return false;
        }
        //using hare and tortoise method 
        ListNode* hare=head;
        ListNode*tortoise =head;
        while(hare!=NULL && hare->next!=nullptr){  // crucial if the linked list is linear i.e no cycle then hare will try to access the null pointer causing runtime error
            hare=hare->next->next;
            tortoise=tortoise->next;
            if(hare==tortoise){
                return true;
            }
        }
        return false;
    }
};
